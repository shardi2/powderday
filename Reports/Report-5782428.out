---------------------------------------
Begin Slurm Prolog: Apr-24-2024 00:29:22
Job ID:    5782428
User ID:   shardin31
Account:   gts-jw254-coda20
Job name:  Slurmshardinpowderdayrun
Partition: cpu-small
QOS:       inferno
---------------------------------------

CommandNotFoundError: Your shell has not been properly configured to use 'conda deactivate'.
To initialize your shell, run

    $ conda init <SHELL_NAME>

Currently supported shells are:
  - bash
  - fish
  - tcsh
  - xonsh
  - zsh
  - powershell

See 'conda init --help' for more information and options.

IMPORTANT: You may need to close and restart your shell after running 'conda init'.



Lmod is automatically replacing "mvapich2/2.3.6-ouywal" with "openmpi/4.1.4".

yt : [INFO     ] 2024-04-24 00:30:08,479 Global parallel computation enabled: 29 / 48
yt : [INFO     ] 2024-04-24 00:30:08,462 Global parallel computation enabled: 2 / 48
yt : [INFO     ] 2024-04-24 00:30:08,479 Global parallel computation enabled: 40 / 48
yt : [INFO     ] 2024-04-24 00:30:08,479 Global parallel computation enabled: 45 / 48
yt : [INFO     ] 2024-04-24 00:30:08,479 Global parallel computation enabled: 27 / 48
yt : [INFO     ] 2024-04-24 00:30:08,479 Global parallel computation enabled: 31 / 48
yt : [INFO     ] 2024-04-24 00:30:08,480 Global parallel computation enabled: 38 / 48
yt : [INFO     ] 2024-04-24 00:30:08,480 Global parallel computation enabled: 47 / 48
yt : [INFO     ] 2024-04-24 00:30:08,480 Global parallel computation enabled: 44 / 48
yt : [INFO     ] 2024-04-24 00:30:08,481 Global parallel computation enabled: 42 / 48
yt : [INFO     ] 2024-04-24 00:30:08,481 Global parallel computation enabled: 24 / 48
yt : [INFO     ] 2024-04-24 00:30:08,481 Global parallel computation enabled: 30 / 48
yt : [INFO     ] 2024-04-24 00:30:08,481 Global parallel computation enabled: 34 / 48
yt : [INFO     ] 2024-04-24 00:30:08,481 Global parallel computation enabled: 26 / 48
yt : [INFO     ] 2024-04-24 00:30:08,481 Global parallel computation enabled: 28 / 48
yt : [INFO     ] 2024-04-24 00:30:08,483 Global parallel computation enabled: 32 / 48
yt : [INFO     ] 2024-04-24 00:30:08,484 Global parallel computation enabled: 33 / 48
yt : [INFO     ] 2024-04-24 00:30:08,485 Global parallel computation enabled: 37 / 48
yt : [INFO     ] 2024-04-24 00:30:08,485 Global parallel computation enabled: 35 / 48
yt : [INFO     ] 2024-04-24 00:30:08,485 Global parallel computation enabled: 41 / 48
yt : [INFO     ] 2024-04-24 00:30:08,486 Global parallel computation enabled: 39 / 48
yt : [INFO     ] 2024-04-24 00:30:08,487 Global parallel computation enabled: 43 / 48
yt : [INFO     ] 2024-04-24 00:30:08,495 Global parallel computation enabled: 36 / 48
yt : [INFO     ] 2024-04-24 00:30:08,495 Global parallel computation enabled: 46 / 48
yt : [INFO     ] 2024-04-24 00:30:08,497 Global parallel computation enabled: 25 / 48
yt : [INFO     ] 2024-04-24 00:30:08,462 Global parallel computation enabled: 16 / 48
yt : [INFO     ] 2024-04-24 00:30:08,462 Global parallel computation enabled: 20 / 48
yt : [INFO     ] 2024-04-24 00:30:08,462 Global parallel computation enabled: 22 / 48
yt : [INFO     ] 2024-04-24 00:30:08,463 Global parallel computation enabled: 15 / 48
yt : [INFO     ] 2024-04-24 00:30:08,462 Global parallel computation enabled: 18 / 48
yt : [INFO     ] 2024-04-24 00:30:08,462 Global parallel computation enabled: 19 / 48
yt : [INFO     ] 2024-04-24 00:30:08,463 Global parallel computation enabled: 5 / 48
yt : [INFO     ] 2024-04-24 00:30:08,463 Global parallel computation enabled: 8 / 48
yt : [INFO     ] 2024-04-24 00:30:08,463 Global parallel computation enabled: 1 / 48
yt : [INFO     ] 2024-04-24 00:30:08,463 Global parallel computation enabled: 13 / 48
yt : [INFO     ] 2024-04-24 00:30:08,463 Global parallel computation enabled: 0 / 48
yt : [INFO     ] 2024-04-24 00:30:08,463 Global parallel computation enabled: 10 / 48
yt : [INFO     ] 2024-04-24 00:30:08,463 Global parallel computation enabled: 17 / 48
yt : [INFO     ] 2024-04-24 00:30:08,463 Global parallel computation enabled: 3 / 48
yt : [INFO     ] 2024-04-24 00:30:08,464 Global parallel computation enabled: 23 / 48
yt : [INFO     ] 2024-04-24 00:30:08,465 Global parallel computation enabled: 11 / 48
yt : [INFO     ] 2024-04-24 00:30:08,466 Global parallel computation enabled: 6 / 48
yt : [INFO     ] 2024-04-24 00:30:08,467 Global parallel computation enabled: 12 / 48
yt : [INFO     ] 2024-04-24 00:30:08,467 Global parallel computation enabled: 21 / 48
yt : [INFO     ] 2024-04-24 00:30:08,475 Global parallel computation enabled: 4 / 48
yt : [INFO     ] 2024-04-24 00:30:08,475 Global parallel computation enabled: 7 / 48
yt : [INFO     ] 2024-04-24 00:30:08,479 Global parallel computation enabled: 14 / 48
yt : [INFO     ] 2024-04-24 00:30:08,481 Global parallel computation enabled: 9 / 48
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P019 yt : [ERROR    ] 2024-04-24 00:30:08,655 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P000 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P001 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P002 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P003 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P004 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P005 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P006 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': P028 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiu  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P007 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P008 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {P009 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P030 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuP010 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P012 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuP040 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P013 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuP044 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P014 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuP024 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P015 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuP025 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P016 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuP026 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P017 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuP027 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}P018 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiu, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'ds': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {escription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d82c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d82ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vec'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP029 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}P020 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiu, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'ds': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {escription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vec'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P021 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuP031 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P022 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuP032 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID':   File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P023 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuP033 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {s': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': 'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP034 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP035 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP036 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d82c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d82ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP037 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP038 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP039 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d80c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d80ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d80dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d80dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'd, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d83c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d83ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d83d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d83dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d83d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d83dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d83d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP041 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP042 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d80c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d80ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d80dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d80dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP043 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'd, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP045 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP046 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d80c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d80ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d80dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d80dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'dP047 yt : [ERROR    ] 2024-04-24 00:30:08,675 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radiuescription': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d82c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d82ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vecs': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {tor_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d82c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d82ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P028 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 28.
{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d82c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d82ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P030 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 30.
{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d83c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d83ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d83d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d83dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d83d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d83dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d83d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d80c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d80ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d80dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d80dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d82c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d82ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d82c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d82ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d83dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P044 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 44.
{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P024 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 24.
magnitude_func at 0x2aaab9d82dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P025 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 25.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P026 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 26.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P027 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 27.
magnitude_func at 0x2aaab9d82dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P029 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 29.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P031 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 31.
magnitude_func at 0x2aaab9d83dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P032 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 32.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P033 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 33.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P034 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 34.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P035 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 35.
magnitude_func at 0x2aaab9d80dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P036 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 36.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P037 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 37.
magnitude_func at 0x2aaab9d82dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P038 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 38.
magnitude_func at 0x2aaab9d82dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P039 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 39.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P041 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 41.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P042 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 42.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P043 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 43.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P045 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 45.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P046 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 46.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P047 yt : [ERROR    ] 2024-04-24 00:30:08,675 Error occurred on rank 47.
P040 yt : [ERROR    ] 2024-04-24 00:30:08,689 Error occurred on rank 40.
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 30 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 25 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 28 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 26 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 36 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 44 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 34 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 35 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 43 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 38 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 41 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 31 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 46 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 33 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 42 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 37 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 47 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d80c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d80ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d80dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d80dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d80d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P019 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 19.
{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _{'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d82c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d82ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d82dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d82d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P000 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 0.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P001 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 1.
magnitude_func at 0x2aaab9d82dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P002 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 2.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P003 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 3.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P004 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 4.
magnitude_func at 0x2aaab9d80dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P005 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 5.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P006 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 6.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P007 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 7.
magnitude_func at 0x2aaab9d80dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P008 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 8.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P009 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 9.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P010 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 10.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P012 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 12.
magnitude_func at 0x2aaab9d80dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P013 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 13.
magnitude_func at 0x2aaab9d82dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P014 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 14.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P015 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 15.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P016 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 16.
magnitude_func at 0x2aaab9d80dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P017 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 17.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P018 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 18.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P020 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 20.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P021 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 21.
magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P022 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 22.
magnitude_func at 0x2aaab9d82dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P023 yt : [ERROR    ] 2024-04-24 00:30:08,656 Error occurred on rank 23.
  File "stellar_mass.py", line 39, in <module>
    a.add_analysis_field("stellar_mass", default=-1, units="Msun")
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/arbor.py", line 852, in add_analysis_field
    self.field_info.add_analysis_field(
  File "/storage/home/hcoda1/7/shardin31/.conda/envs/pd_environment_3/lib/python3.8/site-packages/ytree/data_structures/fields.py", line 77, in add_analysis_field
    raise ArborFieldAlreadyExists(name, arbor=self)
P011 yt : [ERROR    ] 2024-04-24 00:30:08,656 ArborFieldAlreadyExists: Field already exists: "stellar_mass" in {'scale_factor': {'units': ''}, 'uid': {'units': ''}, 'desc_scale': {'units': '', 'description': 'Scale of descendant halo, if applicable.'}, 'desc_uid': {'units': ''}, 'num_prog': {'units': '', 'description': 'Number of progenitors.'}, 'pid': {'units': '', 'description': 'ID of least massive host halo (-1 if distinct halo).'}, 'upid': {'units': '', 'description': 'ID of most massive host halo (different from Pid when the halo is within two or more larger halos).'}, 'desc_pid': {'units': '', 'description': 'Pid of descendant halo (if applicable).'}, 'phantom': {'units': '', 'description': 'Nonzero for halos interpolated across timesteps.'}, 'sam_Mvir': {'units': 'Msun/h', 'description': 'Halo mass, smoothed across accretion history; always greater than sum of halo masses of contributing progenitors (Msun/h).  Only for use with select semi-analytical models.'}, 'mass': {'units': 'Msun'}, 'virial_radius': {'units': 'kpc'}, 'scale_radius': {'units': 'kpc'}, 'velocity_dispersion': {'units': 'km/s'}, 'mmp?': {'units': '', 'description': 'whether the halo is the most massive progenitor or not.'}, 'scale_of_last_MM': {'units': '', 'description': 'scale factor of the last major merger (Mass ratio > 0.3).'}, 'vmax': {'units': 'km/s ', 'description': 'Maxmimum circular velocity (km/s physical).'}, 'position_x': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_y': {'units': 'unitary', 'vector_fieldname': 'position'}, 'position_z': {'units': 'unitary', 'vector_fieldname': 'position'}, 'velocity_x': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_y': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'velocity_z': {'units': 'km/s', 'vector_fieldname': 'velocity'}, 'angular_momentum_x': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_y': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'angular_momentum_z': {'units': '(Msun/h) * (Mpc/h) * km/s ', 'vector_fieldname': 'angular_momentum'}, 'spin_parameter': {'units': ''}, 'Breadth_first_ID': {'units': '', 'description': 'breadth-first ordering of halos within a tree.'}, 'Depth_first_ID': {'units': '', 'description': 'depth-first ordering of halos within a tree.'}, 'Tree_root_ID': {'units': '', 'description': 'ID of the halo at the last timestep in the tree.'}, 'halo_id': {'units': ''}, 'Snap_idx': {'units': '', 'description': 'Index of snapshot (in original snapshot list) from which halo originated.'}, 'Next_coprogenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of next coprogenitor.'}, 'Last_progenitor_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor.'}, 'Last_mainleaf_depthfirst_ID': {'units': '', 'description': 'Depthfirst ID of last progenitor on main progenitor branch.'}, 'Tidal_Force': {'units': '', 'description': 'Strongest tidal force from any nearby halo, in dimensionless units (Rhalo / Rhill).'}, 'Tidal_ID': {'units': '', 'description': 'ID of halo exerting strongest tidal force.'}, 'Rs_Klypin': {'units': '', 'description': 'Scale radius determined using Vmax and Mvir (see Rockstar paper)'}, 'Mvir_all': {'units': 'Msun/h', 'description': 'Mass enclosed within the specified overdensity, including unbound particles (Msun/h)'}, 'M200b': {'units': '', 'description': ''}, 'M200c': {'units': '', 'description': ''}, 'M500c': {'units': '', 'description': ''}, 'M2500c': {'units': '', 'description': ''}, 'Xoff': {'units': 'kpc/h ', 'description': 'Offset of density peak from average particle position (kpc/h comoving)'}, 'Voff': {'units': 'km/s ', 'description': 'Offset of density peak from average particle velocity (km/s physical)'}, 'Spin_Bullock': {'units': '', 'description': 'Bullock spin parameter (J/(sqrt(2)*GMVR))'}, 'b_to_a': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a': {'units': '', 'description': ''}, 'A[x]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z]': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'b_to_a(500c)': {'units': '', 'description': 'Ratio of second and third largest shape ellipsoid axes (B and C) to largest shape ellipsoid axis (A) (dimensionless).'}, 'c_to_a(500c)': {'units': '', 'description': ''}, 'A[x](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[y](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'A[z](500c)': {'units': 'kpc/h ', 'description': 'Largest shape ellipsoid axis (kpc/h comoving)'}, 'T_|U|': {'units': ''}, 'M_pe_Behroozi': {'units': '', 'description': ''}, 'M_pe_Diemer': {'units': '', 'description': ''}, 'Type': {'units': '', 'description': ''}, 'SM': {'units': '', 'description': ''}, 'Gas': {'units': '', 'description': ''}, 'BH_Mass': {'units': '', 'description': ''}, 'stellar_mass': {'units': 'Msun', 'type': 'analysis_saved'}, 'redshift': {'name': 'redshift', 'type': 'derived', 'function': <function _redshift at 0x2aaab9d81c10>, 'units': '', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['scale_factor']}, 'time': {'name': 'time', 'type': 'derived', 'function': <function _time at 0x2aaab9d81ca0>, 'units': 'Myr', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['redshift']}, 'position': {'name': 'position', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['position_x', 'position_y', 'position_z']}, 'position_magnitude': {'name': 'position_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'unitary', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['position']}, 'velocity': {'name': 'velocity', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['velocity_x', 'velocity_y', 'velocity_z']}, 'velocity_magnitude': {'name': 'velocity_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': 'km/s', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['velocity']}, 'angular_momentum': {'name': 'angular_momentum', 'type': 'derived', 'function': <function _vector_func at 0x2aaab9d81d30>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': True, 'description': None, 'dependencies': ['angular_momentum_x', 'angular_momentum_y', 'angular_momentum_z']}, 'angular_momentum_magnitude': {'name': 'angular_momentum_magnitude', 'type': 'derived', 'function': <function _magnitude_func at 0x2aaab9d81dc0>, 'units': '(Msun/h) * (Mpc/h) * km/s ', 'dtype': <class 'numpy.float64'>, 'vector_field': False, 'description': None, 'dependencies': ['angular_momentum']}}.
P011 yt : [ERROR    ] 2024-04-24 00:30:08,669 Error occurred on rank 11.
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 4 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 19 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 12 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 5 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 3 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 7 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 10 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 8 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 14 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 2 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 16 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 6 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 9 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
slurmstepd: error: *** STEP 5782428.0 ON atl1-1-02-005-13-2 CANCELLED AT 2024-04-24T00:30:08 ***
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 21 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 23 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 22 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
srun: error: atl1-1-02-005-13-2: tasks 0-23: Killed
srun: error: atl1-1-02-005-14-2: tasks 24-27,29,31-47: Killed
srun: error: atl1-1-02-005-14-2: tasks 28,30: Exited with exit code 1
---------------------------------------
Begin Slurm Epilog: Apr-24-2024 00:30:09
Job ID:        5782428
Array Job ID:  _4294967294
User ID:       shardin31
Account:       gts-jw254-coda20
Job name:      Slurmshardinpowderdayrun
Resources:     cpu=48,mem=100G,node=2
Rsrc Used:     cput=00:38:24,vmem=29432K,walltime=00:00:48,mem=7060K,energy_used=0
Partition:     cpu-small
QOS:           inferno
Nodes:         atl1-1-02-005-13-2,atl1-1-02-005-14-2
---------------------------------------

---------------------------------------
Begin Slurm Prolog: Apr-01-2024 11:18:35
Job ID:    5401107
User ID:   shardin31
Account:   gts-jw254-coda20
Job name:  Slurmshardinpowderdayrun
Partition: cpu-small
QOS:       inferno
---------------------------------------

CommandNotFoundError: Your shell has not been properly configured to use 'conda deactivate'.
To initialize your shell, run

    $ conda init <SHELL_NAME>

Currently supported shells are:
  - bash
  - fish
  - tcsh
  - xonsh
  - zsh
  - powershell

See 'conda init --help' for more information and options.

IMPORTANT: You may need to close and restart your shell after running 'conda init'.



Lmod is automatically replacing "mvapich2/2.3.6-ouywal" with "openmpi/4.1.4".

yt : [INFO     ] 2024-04-01 11:19:33,552 Global parallel computation enabled: 7 / 32
yt : [INFO     ] 2024-04-01 11:19:33,552 Global parallel computation enabled: 18 / 32
yt : [INFO     ] 2024-04-01 11:19:33,552 Global parallel computation enabled: 3 / 32
yt : [INFO     ] 2024-04-01 11:19:33,552 Global parallel computation enabled: 5 / 32
yt : [INFO     ] 2024-04-01 11:19:33,553 Global parallel computation enabled: 1 / 32
yt : [INFO     ] 2024-04-01 11:19:33,554 Global parallel computation enabled: 6 / 32
yt : [INFO     ] 2024-04-01 11:19:33,555 Global parallel computation enabled: 4 / 32
yt : [INFO     ] 2024-04-01 11:19:33,555 Global parallel computation enabled: 2 / 32
yt : [INFO     ] 2024-04-01 11:19:33,557 Global parallel computation enabled: 13 / 32
yt : [INFO     ] 2024-04-01 11:19:33,557 Global parallel computation enabled: 12 / 32
yt : [INFO     ] 2024-04-01 11:19:33,559 Global parallel computation enabled: 8 / 32
yt : [INFO     ] 2024-04-01 11:19:33,559 Global parallel computation enabled: 0 / 32
yt : [INFO     ] 2024-04-01 11:19:33,559 Global parallel computation enabled: 11 / 32
yt : [INFO     ] 2024-04-01 11:19:33,559 Global parallel computation enabled: 15 / 32
yt : [INFO     ] 2024-04-01 11:19:33,560 Global parallel computation enabled: 10 / 32
yt : [INFO     ] 2024-04-01 11:19:33,560 Global parallel computation enabled: 14 / 32
yt : [INFO     ] 2024-04-01 11:19:33,560 Global parallel computation enabled: 9 / 32
yt : [INFO     ] 2024-04-01 11:19:33,552 Global parallel computation enabled: 22 / 32
yt : [INFO     ] 2024-04-01 11:19:33,552 Global parallel computation enabled: 17 / 32
yt : [INFO     ] 2024-04-01 11:19:33,553 Global parallel computation enabled: 29 / 32
yt : [INFO     ] 2024-04-01 11:19:33,554 Global parallel computation enabled: 28 / 32
yt : [INFO     ] 2024-04-01 11:19:33,554 Global parallel computation enabled: 30 / 32
yt : [INFO     ] 2024-04-01 11:19:33,554 Global parallel computation enabled: 20 / 32
yt : [INFO     ] 2024-04-01 11:19:33,554 Global parallel computation enabled: 16 / 32
yt : [INFO     ] 2024-04-01 11:19:33,555 Global parallel computation enabled: 27 / 32
yt : [INFO     ] 2024-04-01 11:19:33,555 Global parallel computation enabled: 26 / 32
yt : [INFO     ] 2024-04-01 11:19:33,555 Global parallel computation enabled: 25 / 32
yt : [INFO     ] 2024-04-01 11:19:33,556 Global parallel computation enabled: 24 / 32
yt : [INFO     ] 2024-04-01 11:19:33,556 Global parallel computation enabled: 31 / 32
yt : [INFO     ] 2024-04-01 11:19:33,559 Global parallel computation enabled: 23 / 32
yt : [INFO     ] 2024-04-01 11:19:33,562 Global parallel computation enabled: 21 / 32
yt : [INFO     ] 2024-04-01 11:19:33,562 Global parallel computation enabled: 19 / 32
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P019 yt : [ERROR    ] 2024-04-01 11:19:33,701 NameError: name 'trees' is not defined
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P023 yt : [ERROR    ] 2024-04-01 11:19:33,701 NameError: name 'trees' is not defined
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P021 yt : [ERROR    ] 2024-04-01 11:19:33,701 NameError: name 'trees' is not defined
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
P019 yt : [ERROR    ] 2024-04-01 11:19:33,701 Error occurred on rank 19.
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
P021 yt : [ERROR    ] 2024-04-01 11:19:33,701 Error occurred on rank 21.
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
P023 yt : [ERROR    ] 2024-04-01 11:19:33,702 Error occurred on rank 23.
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P003 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P007 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P005 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P006 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P000 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P010 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P015 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P029 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P012 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P025 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P002 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P016 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P013 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P020 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
P003 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 3.
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P022 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
P007 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 7.
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P028 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
P005 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 5.
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P031 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P014 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P026 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
P000 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 0.
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P024 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
P006 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 6.
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P018 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
P010 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 10.
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P030 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P011 yt : [ERROR    ] 2024-04-01 11:19:33,704 NameError: name 'trees' is not defined
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P027 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
P015 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 15.
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P017 yt : [ERROR    ] 2024-04-01 11:19:33,703 NameError: name 'trees' is not defined
P012 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 12.
P025 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 25.
P002 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 2.
P029 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 29.
P013 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 13.
P016 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 16.
P014 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 14.
P022 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 22.
P011 yt : [ERROR    ] 2024-04-01 11:19:33,704 Error occurred on rank 11.
P031 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 31.
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P009 yt : [ERROR    ] 2024-04-01 11:19:33,705 NameError: name 'trees' is not defined
P020 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 20.
P028 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 28.
P009 yt : [ERROR    ] 2024-04-01 11:19:33,705 Error occurred on rank 9.
P026 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 26.
P024 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 24.
P018 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 18.
P030 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 30.
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P001 yt : [ERROR    ] 2024-04-01 11:19:33,705 NameError: name 'trees' is not defined
P017 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 17.
P027 yt : [ERROR    ] 2024-04-01 11:19:33,703 Error occurred on rank 27.
P001 yt : [ERROR    ] 2024-04-01 11:19:33,705 Error occurred on rank 1.
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P008 yt : [ERROR    ] 2024-04-01 11:19:33,706 NameError: name 'trees' is not defined
Additional features and improved performance (usually) by saving this arbor with "save_arbor" and reloading:
	>>> a = ytree.load("/storage/home/hcoda1/0/jw254/data/SG64-2020/rockstar_halos-jhw/trees/tree_0_0_0.dat")
	>>> fn = a.save_arbor()
	>>> a = ytree.load(fn)
P008 yt : [ERROR    ] 2024-04-01 11:19:33,706 Error occurred on rank 8.
  File "analysis_pipeline.py", line 136, in <module>
    for tree in ytree.parallel_trees(trees, dynamic=dynamic):
P004 yt : [ERROR    ] 2024-04-01 11:19:33,707 NameError: name 'trees' is not defined
P004 yt : [ERROR    ] 2024-04-01 11:19:33,707 Error occurred on rank 4.
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 21 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 23 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 13 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 16 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 20 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 1 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 22 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 3 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 25 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 7 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 28 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 29 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 2 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 31 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 5 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 18 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 8 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 19 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 10 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 24 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 11 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 26 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 12 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 30 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 14 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 17 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 15 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 27 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 4 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 6 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 9 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
slurmstepd: error: *** STEP 5401107.0 ON atl1-1-02-019-1-1 CANCELLED AT 2024-04-01T11:19:33 ***
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
srun: error: atl1-1-02-019-2-2: tasks 16-20,22-31: Killed
srun: error: atl1-1-02-019-2-2: task 21: Exited with exit code 1
srun: error: atl1-1-02-019-1-1: tasks 0-15: Killed
---------------------------------------
Begin Slurm Epilog: Apr-01-2024 11:19:34
Job ID:        5401107
Array Job ID:  _4294967294
User ID:       shardin31
Account:       gts-jw254-coda20
Job name:      Slurmshardinpowderdayrun
Resources:     cpu=32,mem=100G,node=2
Rsrc Used:     cput=00:31:28,vmem=6296K,walltime=00:00:59,mem=5912K,energy_used=0
Partition:     cpu-small
QOS:           inferno
Nodes:         atl1-1-02-019-1-1,atl1-1-02-019-2-2
---------------------------------------
